---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: postgres-operator
      namespace: database
    - name: emqx-operator
      namespace: database
    - name: external-secrets
      namespace: security
    - name: multus
      namespace: kube-system
    - name: volsync
      namespace: storage
  values:
    controllers:
      home-assistant:
        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"multus-iot",
                "namespace": "kube-system",
                "ips": ["192.168.101.254/24"]
              }]
            secret.reloader.stakater.com/reload: "home-assistant-emqx-init,home-assistant-secret"
          securityContext:
            runAsUser: 0
            runAsGroup: 0
        containers:
          app:
            image: &home-assistant-image
              repository: ghcr.io/home-assistant/home-assistant
              tag: 2025.4.2
            envFrom:
              - secretRef:
                  name: home-assistant-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /manifest.json
                    port: 8123
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup: *probes
            resources:
              requests:
                cpu: 100m
                memory: 2Gi
              limits:
                memory: 2Gi
          code-server:
            image: &code-server-image
              repository: ghcr.io/coder/code-server
              tag: 4.99.4
            args: [
              "--auth", "none",
              "--user-data-dir", "/config/.vscode",
              "--extensions-dir", "/config/.vscode",
              "--port", "80",
              "/config"
            ]
            resources:
              requests:
                cpu: 10m
                memory: 2Gi
              limits:
                memory: 2Gi
            lifecycle:
              postStart:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - |
                        (
                          set -ex
                          apt update
                          apt install --yes dnsutils
                          apt install --yes iproute2
                          apt install --yes inetutils-ping
                          apt install --yes inetutils-telnet
                          apt install --yes inetutils-traceroute
                          apt install --yes net-tools
                        ) > /tmp/postStart.log 2>&1 || true
        initContainers:
          emqx-init:
            image: &emqx-init-image
              repository: ghcr.io/prehor/emqx-init
              tag: 1.0.0
            envFrom:
              - secretRef:
                  name: home-assistant-emqx-init
          recorder-init:
            image: &recorder-init-image
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: home-assistant-postgres-recorder-initdb
          config-init:
            image: &config-init-image
              repository: docker.io/alpine/git
              tag: v2.47.2
            command: ["/bin/sh","-c"]
            args: |
              set -ex
              if [ ! -e "/config/.git" ]; then
                git clone git@github.com:prehor/hass-config.git /config/.hass-config
                mv /config/.hass-config/* /config/.hass-config/.* /config
                rmdir /config/.hass-config/
              fi
      preload-images:
        type: job
        annotations:
          helm.sh/hook: pre-install,pre-upgrade
        job:
          ttlSecondsAfterFinished: 600
        pod:
          affinity:
            podAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: *app
                    topologyKey: kubernetes.io/hostname
          restartPolicy: Never
          securityContext:
            runAsUser: 568
            runAsGroup: 568
        containers:
          home-assistant:
            image:
              <<: *home-assistant-image
            command: ['/bin/sleep']
            args: ['10']
          code-server:
            image:
              <<: *code-server-image
            command: ['/bin/sleep']
            args: ['10']
          emqx-init:
            image:
              <<: *emqx-init-image
            command: ['/bin/sleep']
            args: ['10']
          recorder-init:
            image:
              <<: *recorder-init-image
            command: ['/bin/sleep']
            args: ['10']
          config-init:
            image:
              <<: *config-init-image
            command: ['/bin/sleep']
            args: ['10']
        serviceAccount:
          name: default
    service:
      app:
        controller: home-assistant
        ports:
          http:
            port: 8123
          code-server:
            port: 80
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "${SECRET_CLUSTER_NAME}.${SECRET_DOMAIN}"
        hosts:
          - host: &host hass.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
      code-server:
        className: internal
        hosts:
          - host: &host "hash.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: code-server
        tls:
          - hosts:
              - *host
    configMaps:
      # https://github.com/home-assistant/core/issues/127966#issuecomment-2539017518
      dockerenv:
        data:
          dockerenv: ""
    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          home-assistant:
            app:
              - path: /config
            code-server:
              - path: /config
            config-init:
              - path: /config
      deploy-key:
        type: secret
        name: home-assistant-config-deploy-key
        defaultMode: 0o400
        globalMounts:
          - path: /root/.ssh/id_ed25519
            subPath: ssh-privatekey
          - path: /root/.ssh/known_hosts2
            subPath: ssh-known-hosts
      # https://github.com/home-assistant/core/issues/127966#issuecomment-2539017518
      dockerenv:
        type: configMap
        name: home-assistant-dockerenv
        advancedMounts:
          home-assistant:
            app:
              - path: /.dockerenv
                subPath: dockerenv
      logs:
        type: emptyDir
        advancedMounts:
          home-assistant:
            app:
              - path: /config/logs
      tts:
        type: emptyDir
        advancedMounts:
          home-assistant:
            app:
              - path: /config/tts
      tmp:
        type: emptyDir
