---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
spec:
  instances: 3
  imageCatalogRef:
    apiGroup: postgresql.cnpg.io
    kind: ImageCatalog
    name: timescaledb
    major: 16
  primaryUpdateStrategy: unsupervised
  storage:
    size: 15Gi
    storageClass: local-database
  superuserSecret:
    name: postgres-cluster-secret
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_wal_size: "4096"  # See walSegmentSize: 1024 in bootstrap.initdb
      shared_buffers: "256MB"
      # ZFS tuning
      # https://openzfs.github.io/openzfs-docs/Performance%20and%20Tuning/Workload%20Tuning.html#postgresql
      # https://vadosware.io/post/everything-ive-seen-on-optimizing-postgres-on-zfs-on-linux/
      # https://kubeblocks.io/blog/A-testing-report-for-optimizing-PG-performance-on-Kubernetes
      # full_page_writes: "off"   # https://github.com/cloudnative-pg/cloudnative-pg/discussions/3058
      recovery_prefetch: "try"
      wal_init_zero: "off"
      wal_recycle: "off"
    shared_preload_libraries:
      - timescaledb
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 20m
    limits:
      memory: 4Gi
  monitoring:
    enablePodMonitor: true
    # https://github.com/cloudnative-pg/cloudnative-pg/issues/2501
    podMonitorMetricRelabelings:
      - { sourceLabels: ["cluster"], targetLabel: cnpg_cluster, action: replace }
      - { regex: cluster, action: labeldrop }
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
        encryption: AES256
      wal:
        compression: bzip2
        encryption: AES256
      destinationPath: s3://home-ops-postgresql
      endpointURL: https://s3.${STORAGE_DOMAIN}
      # Note: serverName version needs to be inclemented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres16-v0
      s3Credentials:
        accessKeyId:
          name: postgres-cluster-secret
          key: MINIO_ACCESS_KEY
        secretAccessKey:
          name: postgres-cluster-secret
          key: MINIO_SECRET_KEY
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    initdb:
      # The postgres-db-manager user will be used to create databases using onedr0p/postgres-init
      database: postgres-db-manager
      owner: postgres-db-manager
      secret:
        name: postgres-secret
      postInitApplicationSQL:
        - ALTER USER "postgres-db-manager" WITH CREATEDB;
        - ALTER USER "postgres-db-manager" WITH CREATEROLE;
      # ZFS tuning
      walSegmentSize: 1024
  #   recovery:
  #     source: &previousCluster postgres16-v0
  # # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
