---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.15.1
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: multus
      namespace: kube-system
    - name: rook-ceph-operator
      namespace: storage
  values:
    toolbox:
      enabled: true

    operatorNamespace: storage

    monitoring:
      enabled: true
      createPrometheusRules: true

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true

    cephClusterSpec:
      crashCollector:
        disable: false

      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false

      network:
        provider: host
        addressRanges:
          public:
            - "192.168.1.0/24"
          cluster:
            - "10.49.0.0/24"

      storage:
        useAllNodes: true
        useAllDevices: true
        deviceFilter: nvme0n1
        config:
          osdsPerDevice: "1"

      resources:
        mgr:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            memory: 2Gi
        mon:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            memory: 6Gi
        osd:
          requests:
            cpu: 50m
            memory: 2Gi
          limits:
            memory: 6Gi
        mgr-sidecar:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 256Mi
        crashcollector:
          requests:
            cpu: 15m
            memory: 64Mi
          limits:
            memory: 64Mi
        logcollector:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            memory: 1Gi
        cleanup:
          requests:
            cpu: 50m
            memory: 100Mi
          limits:
            memory: 1Gi

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: "Immediate"
          mountOptions: []
          allowedTopologies: []
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: storage
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: storage
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: storage
            csi.storage.k8s.io/fstype: ext4

    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete

    cephFileSystems: []
    #   - name: ceph-filesystem
    #     spec:
    #       metadataPool:
    #         replicated:
    #           size: 3
    #       dataPools:
    #         - failureDomain: host
    #           replicated:
    #             size: 3
    #           name: data0
    #       metadataServer:
    #         activeCount: 1
    #         activeStandby: true
    #         priorityClassName: system-cluster-critical
    #         resources:
    #           requests:
    #             cpu: 20m
    #             memory: 1Gi
    #           limits:
    #             memory: 3Gi
    #     storageClass:
    #       enabled: true
    #       isDefault: false
    #       name: ceph-filesystem
    #       reclaimPolicy: Delete
    #       allowVolumeExpansion: true
    #       mountOptions: []
    #       parameters:
    #         csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
    #         csi.storage.k8s.io/provisioner-secret-namespace: storage
    #         csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
    #         csi.storage.k8s.io/controller-expand-secret-namespace: storage
    #         csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
    #         csi.storage.k8s.io/node-stage-secret-namespace: storage
    #         csi.storage.k8s.io/fstype: ext4
    #
    # cephFileSystemVolumeSnapshotClass:
    #   enabled: true
    #   name: csi-ceph-filesystem
    #   isDefault: false
    #   deletionPolicy: Delete

    cephObjectStores: []
    #   - name: ceph-objectstore
    #     spec:
    #       metadataPool:
    #         failureDomain: host
    #         replicated:
    #           size: 3
    #       dataPool:
    #         failureDomain: host
    #         erasureCoded:
    #           dataChunks: 2
    #           codingChunks: 1
    #       preservePoolsOnDelete: true
    #       priorityClassName: system-cluster-critical
    #       gateway:
    #         port: 80
    #         resources:
    #           requests:
    #             cpu: 20m
    #             memory: 256Mi
    #           limits:
    #             memory: 2Gi
    #         instances: 1
    #       healthCheck:
    #         bucket:
    #           interval: 60s
    #     storageClass:
    #       enabled: true
    #       name: ceph-bucket
    #       reclaimPolicy: Delete
    #       parameters: []

    ingress:
      dashboard:
        ingressClassName: "internal"
        host:
          name: &host rook.${SECRET_DOMAIN}
          path: "/"
        tls:
          - hosts:
              - *host
