{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  // default commit messages
  commitMessageTopic: '{{depName}}',
  // custom commit messages
  packageRules: [
    // commit message topics
    {
      matchDatasources: ['helm'],
      commitMessageTopic: 'chart {{depName}}'
    },
    {
      matchDatasources: ['docker'],
      commitMessageTopic: 'image {{depName}}'
    },
    // commit messages
    {
      matchDatasources: ['docker'],
      matchUpdateTypes: ['major'],
      commitMessagePrefix: 'feat(container)!: ',
      commitMessageExtra: ' ( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['docker'],
      matchUpdateTypes: ['minor'],
      semanticCommitType: 'feat',
      semanticCommitScope: 'container',
      commitMessageExtra: ' ( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['docker'],
      matchUpdateTypes: ['patch'],
      semanticCommitType: 'fix',
      semanticCommitScope: 'container',
      commitMessageExtra: ' ( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['docker'],
      matchUpdateTypes: ['digest'],
      semanticCommitType: 'chore',
      semanticCommitScope: 'container',
      commitMessageExtra: '( {{currentDigestShort}} → {{newDigestShort}} )'
    },
    {
      matchDatasources: ['helm'],
      matchUpdateTypes: ['major'],
      commitMessagePrefix: 'feat(helm)!: ',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['helm'],
      matchUpdateTypes: ['minor'],
      semanticCommitType: 'feat',
      semanticCommitScope: 'helm',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['helm'],
      matchUpdateTypes: ['patch'],
      semanticCommitType: 'fix',
      semanticCommitScope: 'helm',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['galaxy', 'galaxy-collection'],
      matchUpdateTypes: ['major'],
      commitMessagePrefix: 'feat(ansible)!: ',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['galaxy', 'galaxy-collection'],
      matchUpdateTypes: ['minor'],
      semanticCommitType: 'feat',
      semanticCommitScope: 'ansible',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['galaxy', 'galaxy-collection'],
      matchUpdateTypes: ['patch'],
      semanticCommitType: 'fix',
      semanticCommitScope: 'ansible',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['github-releases', 'github-tags'],
      matchUpdateTypes: ['major'],
      commitMessagePrefix: 'feat(github-release)!: ',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['github-releases', 'github-tags'],
      matchUpdateTypes: ['minor'],
      semanticCommitType: 'feat',
      semanticCommitScope: 'github-release',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchDatasources: ['github-releases', 'github-tags'],
      matchUpdateTypes: ['patch'],
      semanticCommitType: 'fix',
      semanticCommitScope: 'github-release',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchManagers: ['github-actions'],
      matchUpdateTypes: ['major'],
      commitMessagePrefix: 'feat(github-action)!: ',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchManagers: ['github-actions'],
      matchUpdateTypes: ['minor'],
      semanticCommitType: 'feat',
      semanticCommitScope: 'github-action',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    },
    {
      matchManagers: ['github-actions'],
      matchUpdateTypes: ['patch'],
      semanticCommitType: 'fix',
      semanticCommitScope: 'github-action',
      commitMessageExtra: '( {{currentVersion}} → {{newVersion}} )'
    }
  ]
}
