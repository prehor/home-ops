---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:

  bootstrap:
    desc: Bootstrap Flux into a Kubernetes cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    cmds:
      - kubectl --context {{.cluster}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/{{.cluster}}/bootstrap/flux
      - |
        if ! kubectl --context {{.cluster}} -n flux-system get secret sops-age >/dev/null 2>&1; then
          cat {{.AGE_FILE}} | kubectl --context {{.cluster}} -n flux-system create secret generic sops-age --from-file=age.agekey=/dev/stdin
        else
          echo "sops-age secret already exists, skipping creation."
        fi
      - sops --decrypt {{.KUBERNETES_DIR}}/github-deploy-key.sops.yaml | kubectl --context {{.cluster}} apply --server-side --filename -
      - sops --decrypt {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-secrets.sops.yaml | kubectl --context {{.cluster}} apply --server-side --filename -
      - kubectl --context {{.cluster}} apply --server-side --filename {{.KUBERNETES_DIR}}/{{.cluster}}/flux/vars/cluster-settings.yaml
      - kubectl --context {{.cluster}} apply --server-side --kustomize {{.KUBERNETES_DIR}}/{{.cluster}}/flux/config
    requires:
      vars: ["cluster"]
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBERNETES_DIR}}/{{.cluster}}/kubeconfig" }
      - { msg: "Missing Sops Age key file", sh: "test -f {{.AGE_FILE}}" }
      - { msg: "Missing GitHub Deploy key file", sh: "test -f {{.KUBERNETES_DIR}}/github-deploy-key.sops.yaml" }

  apply:
    desc: Apply a Flux Kustomization resource for a cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
        path: Path under apps containing the Flux Kustomization resource (ks.yaml) (required)
        ns: Namespace the Flux Kustomization exists in (default: flux-system)
    cmd: |
      flux --context {{.cluster}} build ks $(basename {{.path}}) \
          --namespace {{.ns}} \
          --kustomization-file {{.KUBERNETES_DIR}}/{{.cluster}}/apps/{{.path}}/ks.yaml \
          --path {{.KUBERNETES_DIR}}/{{.cluster}}/apps/{{.path}} \
          {{- if contains "not found" .ks }}--dry-run \{{ end }}
      | \
      kubectl --context {{.cluster}} apply --server-side \
          --field-manager=kustomize-controller -f -
    requires:
      vars: ["cluster", "path"]
    vars:
      ns: '{{.ns | default "flux-system"}}'
      ks:
        sh: flux --context {{.cluster}} --namespace {{.ns}} get kustomizations $(basename {{.path}}) 2>&1
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBERNETES_DIR}}/{{.cluster}}/kubeconfig" }
      - { msg: "Missing Flux Kustomization for app {{.path}}", sh: "test -f {{.KUBERNETES_DIR}}/{{.cluster}}/apps/{{.path}}/ks.yaml" }

  reconcile:
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    desc: Force update Flux to pull in changes from your Git repository
    cmd: flux --context {{.cluster}} reconcile --namespace flux-system kustomization cluster --with-source
    requires:
      vars: ["cluster"]
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBERNETES_DIR}}/{{.cluster}}/kubeconfig" }
